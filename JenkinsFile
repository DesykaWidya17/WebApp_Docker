pipeline {
    agent any
    tools {
        nodejs "NodeJS_25"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo '📦 Checking out source code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                echo '📥 Installing npm dependencies...'
                bat '''
                    echo Fixing NPM config and increasing timeout...
                    "C:\\Program Files\\nodejs\\npm.cmd" config set fetch-retries 5
                    "C:\\Program Files\\nodejs\\npm.cmd" config set fetch-retry-mintimeout 20000
                    "C:\\Program Files\\nodejs\\npm.cmd" config set fetch-retry-maxtimeout 120000
                    "C:\\Program Files\\nodejs\\npm.cmd" install
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo '🧪 Running tests...'
                bat '''
                    set "CI=true"
                    "C:\\Program Files\\nodejs\\npm.cmd" test -- --passWithNoTests
                '''
            }
        }

        stage('Build Application') {
            steps {
                echo '🏗️ Building application...'
                bat '"C:\\Program Files\\nodejs\\npm.cmd" run build'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo '🐳 Building Docker image...'
                bat 'docker build -t webapp-docker .'
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                echo '🚀 Deploying application with Docker Compose...'
                bat 'docker-compose up -d'
            }
        }

        stage('Health Check') {
            steps {
                echo '🔍 Checking app health...'
                bat 'curl -f http://localhost:3000 || exit 1'
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline executed successfully!'
        }
        failure {
            echo '❌ Pipeline failed! Check logs for details.'
        }
        always {
            echo '🧹 Cleaning up workspace...'
            deleteDir()
        }
    }
}

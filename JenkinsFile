pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo '📦 Checking out source code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                echo '📥 Installing dependencies...'
                bat '''
                echo ===== CEK VERSI NODE DAN NPM =====
                node -v
                npm -v
                echo ===== INSTALL DEPENDENCIES =====
                npm install
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo '🧪 Running tests...'
                bat '''
                echo ===== RUNNING TESTS =====
                set CI=true
                if exist node_modules\\react-scripts (
                    npx react-scripts test --passWithNoTests
                ) else (
                    echo React-scripts not found, skipping tests
                )
                '''
            }
        }

        stage('Build Application') {
            steps {
                echo '🏗️ Building application...'
                bat '''
                echo ===== BUILDING PROJECT =====
                npx react-scripts build
                '''
            }
        }

        stage('Build Docker Image') {
            when {
                expression { fileExists('Dockerfile') }
            }
            steps {
                echo '🐳 Building Docker image...'
                bat 'docker build -t webapp_docker:latest .'
            }
        }

        stage('Deploy with Docker Compose') {
            when {
                expression { fileExists('docker-compose.yml') }
            }
            steps {
                echo '🚀 Deploying with Docker Compose...'
                bat 'docker-compose up -d --build'
            }
        }

        stage('Health Check') {
            steps {
                echo '🔍 Checking application health...'
                bat 'curl http://localhost:3000 || exit 1'
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed! Check logs for details.'
            deleteDir()
        }
    }
}

pipeline {
    agent any

    environment {
        // Tambahkan Node.js path ke dalam environment Jenkins
        PATH = "C:\\Program Files\\nodejs;C:\\Program Files\\Docker\\Docker\\resources\\bin;%PATH%"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì¶ Checking out source code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                bat '''
                    echo ===== CEK VERSI NODE DAN NPM =====
                    node -v
                    npm -v

                    echo ===== INSTALL DEPENDENCIES =====
                    npm config set fetch-retries 5
                    npm config set fetch-retry-factor 10
                    npm config set fetch-timeout 60000
                    npm install
                '''
            }
        }

        stage('Run Tests') {
            steps {
                bat '''
                    echo ===== RUNNING TESTS =====
                    set CI=true
                    npm test -- --passWithNoTests
                '''
            }
        }

        stage('Build Application') {
            steps {
                bat '''
                    echo ===== BUILDING PROJECT =====
                    npm run build
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                bat '''
                    echo ===== BUILDING DOCKER IMAGE =====
                    docker build -t webapp-docker:latest .
                '''
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                bat '''
                    echo ===== DEPLOYING APPLICATION =====
                    docker compose down
                    docker compose up -d
                '''
            }
        }

        stage('Health Check') {
            steps {
                bat '''
                    echo ===== CHECKING CONTAINER STATUS =====
                    docker ps
                '''
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build and Deploy succeeded!'
        }
        failure {
            echo '‚ùå Pipeline failed! Check logs for details.'
        }
        always {
            echo 'üßπ Cleaning up workspace...'
            deleteDir()
        }
    }
}
